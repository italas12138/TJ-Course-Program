/* 计科 2152118 史君宝 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (str[i] != '\0')
        ++i;
    return i; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int s1len, s2len;
    s1len = tj_strlen(s1);
    s2len = tj_strlen(s2);
    for (int i = 0; i < s2len; ++i)
        s1[s1len + i] = s2[i];
    s1[s1len + s2len] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int s1len,s2len;
    s1len = tj_strlen(s1);
    s2len = tj_strlen(s2);
    if (len >= s2len)
        tj_strcat(s1,s2);
    else
    {
        for (int i = 0; i < len; ++i)
            s1[s1len + i] = s2[i];
        s1[s1len + len] = '\0';
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int s2len;
    s2len = tj_strlen(s2);
        for (int i = 0; i < s2len; ++i)
            s1[i] = s2[i];
        s1[s2len] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int s2len;
    s2len = tj_strlen(s2);
    if (len >= s2len)
    {
        for (int i = 0; i < s2len; ++i)
            s1[i] = s2[i];
    }
    else
    {
        for (int i = 0; i < len; ++i)
            s1[i] = s2[i];
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    do
    {
        if (s1[i] == s2[i])
            ++i;
        else
            return s1[i] - s2[i];
    } while (s1[i-1] != '\0' && s2[i-1] != '\0');
    return 0; 
        //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0,a,b;
    do
    {
        if (s1[i] >= 65 && s1[i] <= 90)
            a = 32 + s1[i];
        else
            a = s1[i];
        if (s2[i] >= 65 && s2[i] <= 90)
            b = 32 + s2[i];
        else
            b = s2[i];
        if (a == b)
            ++i;
        else
            return a - b;
    } while (s1[i - 1] != '\0' && s2[i - 1] != '\0');
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i=0,s1len, s2len;
    s1len = tj_strlen(s1);
    s2len = tj_strlen(s2);
    do
    {
        if (s1[i] == s2[i])
            ++i;
        else
            return s1[i] - s2[i];
    } while ((i - 1) != s1len && (i - 1) != s2len&& i!= len);
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0, s1len, s2len, a, b;
    s1len = tj_strlen(s1);
    s2len = tj_strlen(s2);
    do
    {
        if (s1[i] >= 65 && s1[i] <= 90)
            a = 32 + s1[i];
        else
            a = s1[i];
        if (s2[i] >= 65 && s2[i] <= 90)
            b = 32 + s2[i];
        else
            b = s2[i];
        if (a == b)
            ++i;
        else
            return a - b;
    } while ((i - 1) != s1len && (i - 1) != s2len && i != len);
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int slen;
    slen = tj_strlen(str);
    for (int i = 0; i < slen; ++i)
    {
        if (str[i] >= 97 && str[i] <= 122)
            str[i] -= 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int slen;
    slen = tj_strlen(str);
    for (int i = 0; i < slen; ++i)
    {
        if (str[i] >= 65 && str[i] <= 90)
            str[i] += 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    while (str[i] != '\0')
    {
        if (str[i] == ch)
            return i + 1;
        ++i;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    bool abc = 0;
    while (str[i] != '\0')
    {
        if (str[i] == substr[0])
            for (int j = 0; j < tj_strlen(substr); ++j)
                if (str[i+j] == substr[j])
                    abc = 1;
                else
                    abc = 0;
        if (abc == 1)
            return i + 1;
        ++i;
    }
    return 0;  //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int slen;
    slen = tj_strlen(str);
    for (int i = slen; i >= 1; --i)
        if (str[i - 1] == ch)
            return i;
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int slen;
    bool abc = 0;
    slen = tj_strlen(str);
    for(int i=slen;i>=1;--i)
    {
        if (str[i-1] == substr[0])
            for (int j = 0; j < tj_strlen(substr); ++j)
                if (str[i-1+j] == substr[j])
                    abc = 1;
                else
                    abc = 0;
        if (abc == 1)
            return i;
    }
    return 0;  //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int slen;
    char fuzhu;
    slen = tj_strlen(str);
    for (int i = 0; i < slen / 2; ++i)
    {
        fuzhu = str[i];
        str[i] = str[slen - i - 1];
        str[slen - i - 1] = fuzhu;
    }
    return 0; //return值可根据需要修改
}
